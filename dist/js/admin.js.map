{"version":3,"file":"admin.js","names":["toast","toastError","confirmToast","API_BASE","getProfile","currentPage","limit","totalPages","insertSearchAndPagination","table","document","querySelector","search","createElement","type","id","className","placeholder","pagination","innerHTML","parentElement","insertBefore","appendChild","bindSearch","getElementById","addEventListener","async","loadPendingUsers","value","res","fetch","encodeURIComponent","credentials","data","json","ok","Error","message","renderTable","pendingUsers","updatePagination","total","page","err","users","tbody","length","map","user","username","email","role","_id","join","querySelectorAll","forEach","btn","handleDecision","dataset","totalPg","wrapper","info","style","display","textContent","disabled","approve","okText","cancelText","method","me"],"sources":["admin.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import { toast, toastError, confirmToast } from './toast.js'\r\nimport { API_BASE, getProfile } from './api.js'\r\n\r\nlet currentPage = 1\r\nconst limit = 10\r\nlet totalPages = 1\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  try {\r\n    const me = await getProfile()\r\n    if (!me || me.role !== 'admin') {\r\n      toastError('Brak dostępu')\r\n      return\r\n    }\r\n\r\n    insertSearchAndPagination()\r\n    bindSearch()\r\n    await loadPendingUsers()\r\n  } catch {\r\n    toastError('Błąd ładowania danych administratora')\r\n  }\r\n})\r\n\r\nfunction insertSearchAndPagination() {\r\n  const table = document.querySelector('#pendingTable')\r\n  if (!table) return\r\n\r\n  const search = document.createElement('input')\r\n  search.type = 'text'\r\n  search.id = 'search-input'\r\n  search.className = 'admin__search'\r\n  search.placeholder = 'Szukaj…'\r\n\r\n  const pagination = document.createElement('div')\r\n  pagination.className = 'pagination'\r\n  pagination.innerHTML = `\r\n    <button class=\"pagination__btn\" id=\"prev-page\">Poprzednia</button>\r\n    <span class=\"pagination__info\" id=\"pagination-info\">Strona 1 z 1</span>\r\n    <button class=\"pagination__btn\" id=\"next-page\">Następna</button>\r\n  `\r\n\r\n  table.parentElement.insertBefore(search, table)\r\n  table.parentElement.appendChild(pagination)\r\n}\r\n\r\nfunction bindSearch() {\r\n  document.getElementById('search-input')?.addEventListener('input', async () => {\r\n    currentPage = 1\r\n    await loadPendingUsers()\r\n  })\r\n\r\n  document.getElementById('prev-page')?.addEventListener('click', async () => {\r\n    if (currentPage > 1) {\r\n      currentPage--\r\n      await loadPendingUsers()\r\n    }\r\n  })\r\n\r\n  document.getElementById('next-page')?.addEventListener('click', async () => {\r\n    if (currentPage < totalPages) {\r\n      currentPage++\r\n      await loadPendingUsers()\r\n    }\r\n  })\r\n}\r\n\r\nasync function loadPendingUsers() {\r\n  const search = document.getElementById('search-input')?.value || ''\r\n\r\n  try {\r\n    const res = await fetch(`${API_BASE}/api/admin/pending-users?search=${encodeURIComponent(search)}&page=${currentPage}&limit=${limit}`, {\r\n      credentials: 'include'\r\n    })\r\n\r\n    const data = await res.json()\r\n    if (!res.ok) throw new Error(data?.message || 'Błąd ładowania wniosków')\r\n\r\n    renderTable(data.pendingUsers || [])\r\n    updatePagination(data.total, data.page, data.totalPages)\r\n  } catch (err) {\r\n    toastError(err.message || 'Błąd pobierania danych')\r\n  }\r\n}\r\n\r\nfunction renderTable(users = []) {\r\n  const tbody = document.getElementById('pendingBody')\r\n  if (!tbody) return\r\n\r\n  tbody.innerHTML = users.length\r\n    ? users.map(user => `\r\n        <tr>\r\n          <td>${user.username}</td>\r\n          <td>${user.email}</td>\r\n          <td>${user.role}</td>\r\n          <td>\r\n            <button class=\"btn--sm btn-approve\" data-id=\"${user._id}\">Zatwierdź</button>\r\n            <button class=\"btn--sm btn--danger btn-reject\" data-id=\"${user._id}\">Odrzuć</button>\r\n          </td>\r\n        </tr>\r\n      `).join('')\r\n    : `<tr><td colspan=\"4\">Brak wyników.</td></tr>`\r\n\r\n  document.querySelectorAll('.btn-approve').forEach(btn =>\r\n    btn.addEventListener('click', () => handleDecision(btn.dataset.id, true))\r\n  )\r\n\r\n  document.querySelectorAll('.btn-reject').forEach(btn =>\r\n    btn.addEventListener('click', () => handleDecision(btn.dataset.id, false))\r\n  )\r\n}\r\n\r\nfunction updatePagination(total, page, totalPg) {\r\n  totalPages = totalPg || 1\r\n  currentPage = page || 1\r\n\r\n  const wrapper = document.querySelector('.pagination')\r\n  const info = document.getElementById('pagination-info')\r\n\r\n  wrapper.style.display = totalPages > 1 ? 'flex' : 'none'\r\n  if (info) info.textContent = `Strona ${currentPage} z ${totalPages}`\r\n\r\n  document.getElementById('prev-page').disabled = currentPage <= 1\r\n  document.getElementById('next-page').disabled = currentPage >= totalPages\r\n}\r\n\r\nasync function handleDecision(id, approve) {\r\n  const confirmed = await confirmToast({\r\n    message: approve ? 'Zatwierdzić tego użytkownika?' : 'Odrzucić tego użytkownika?',\r\n    okText: approve ? 'Zatwierdź' : 'Odrzuć',\r\n    cancelText: 'Anuluj'\r\n  })\r\n  if (!confirmed) return\r\n\r\n  try {\r\n    const res = await fetch(`${API_BASE}/api/admin/${approve ? 'approve' : 'reject'}/${id}`, {\r\n      method: 'POST',\r\n      credentials: 'include'\r\n    })\r\n\r\n    const data = await res.json()\r\n    if (!res.ok) throw new Error(data?.message || 'Błąd operacji')\r\n\r\n    toast(approve ? 'Zatwierdzono.' : 'Odrzucono.', 'success')\r\n    await loadPendingUsers()\r\n  } catch (err) {\r\n    toastError(err.message || 'Błąd operacji')\r\n  }\r\n}\r\n"]}